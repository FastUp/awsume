#!/bin/bash

if [[ -z "$1" ]];
then 
  echo Missing profile name
  exit 1
else
  if [[ "$2" == "refresh" ]];
  then
    rm ~/.aws/cli/cache/$1*
  fi
  
  if aws sts get-caller-identity --profile $1 >/dev/null
  then

    cachedCreds=`ls ~/.aws/cli/cache/$1*`

    token=$(python -c 'import json,sys,fileinput;
obj=json.loads(fileinput.input().readline());
creds = obj["Credentials"] 
print creds["SessionToken"] + ""
' $cachedCreds)

    id=$(python -c 'import json,sys,fileinput;
obj=json.loads(fileinput.input().readline());
creds = obj["Credentials"] 
print creds["AccessKeyId"] + ""
' $cachedCreds)

    key=$(python -c 'import json,sys,fileinput;
obj=json.loads(fileinput.input().readline());
creds = obj["Credentials"] 
print creds["SecretAccessKey"] + ""
' $cachedCreds)

    region=$(aws configure get region --profile $1)
    
    if [[ "$2" == "show" ]];
    then
      echo "export AWS_SESSION_TOKEN=$token"
      echo "export AWS_SECRET_ACCESS_KEY=$key"
      echo "export AWS_ACCESS_KEY_ID=$id"
      if [[ -z $region ]];
      then
        echo "#No region set"
      else
        echo "export AWS_REGION=$region"
        echo "export AWS_DEFAULT_REGION=$region"
      fi
    fi

    export AWS_SESSION_TOKEN=$token
    export AWS_SECRET_ACCESS_KEY=$key
    export AWS_ACCESS_KEY_ID=$id
    if [[ -z "$region" ]];
    then
      unset AWS_REGION
      unset AWS_DEFAULT_REGION
    else
      export AWS_REGION=$region
      export AWS_DEFAULT_REGION=$region
    fi
  fi
fi
